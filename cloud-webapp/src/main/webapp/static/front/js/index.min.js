var Index = function () {
    var m, b, e, g, h, k, d = {
        getMember: function () {
            var a = $("#member");
            m = JSON.parse(a.text());
            a.text("");
            b = $("#parentId").text();
            void 0 == b && (b = "-1");
            "-1" == b && $("#toBack").hide()
        }, getHander: function () {
            $("#tableContext").empty();
            $.ajax({
                url: basePath + "hander/" + b + "/son/wrapper",
                contentType: "application/json",
                type: "GET",
                success: function (a) {
                    if (globalFunction.returnResult(a, void 0, !1)) {
                        a = a.returnData.list;
                        for (var c = "", l = 0; l < a.length; l++) {
                            var f = a[l], b = f.folder, e = JSON.stringify({
                                handerId: f.handerId,
                                memberId: f.memberId, folder: b
                            }), e = '<tr class="odd gradeX"> <td> <div class="checker"><span class=""><input type="checkbox" class="checkboxes" data-json=' + e + '></span></div> </td><td> <a class ="toSon" href="javascript:;" data-href="' + (basePath + "index?p=" + f.handerId) + '" data-type = "' + b + '"> ';
                            b = b == globalConstant.FILE ? '<i class = "fa fa-file"></i>' : b == globalConstant.FOLDER ? '<i class = "fa fa-folder"></i>' : void 0;
                            c += e + b + " " + f.fileName + ' </a></td> <td class="center"> ' + ("0B" == f.itemInfo.size ? "" : f.itemInfo.size) +
                            ' </td><td class="center"> ' + f.updateDate + " </td></tr>"
                        }
                        $("#tableContext").append(c);
                        d.initTable()
                    } else c = '<tr class="odd gradeX"><td colspan="4" class="center">\u8fd9\u91cc\u7a7a\u7a7a\u5982\u4e5f\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709</td></tr>', $("#tableContext").append(c)
                }
            })
        }, toSonHander: function (a) {
            var c = a.data("type");
            console.log(a[0]);
            c == globalConstant.FOLDER ? window.location.href = a.data("href") : c == globalConstant.FILE ? console.log("file") : console.log("no type")
        }, initRightClick: function () {
            d.getSelection();
            1 < g ? ($("#rename").hide(), $("#open").hide(), $()) : ($("#rename").show(), $("#open").show());
            $("#dataTable").find("tbody").contextmenu({target: "#context-menu"})
        }, getSelection: function () {
            g = 0;
            var a = $("input[type='checkbox'].checkboxes"), c = Array(a.length);
            a.each(function (a) {
                $(this).parent().hasClass("checked") && (c[a] = $(this).data("json"), void 0 != c[a] && g++)
            });
            e = Array(g);
            for (var b = a = 0; b < c.length; b++)void 0 != c[b] && (console.log(c[b]), e[a++] = c[b])
        }, getTree: function () {
            $("#fileTable").gtreetable({
                source: function () {
                    return {
                        type: "GET",
                        url: basePath + "hander/" + b + "/son/wrapper",
                        contentType: "application/json",
                        error: function (a) {
                            alert(a.status + ": " + a.responseText)
                        }
                    }
                },
                onSave: function (a) {
                    return {
                        type: "POST",
                        url: a.isSaved() ? "nodeUpdate?id=" + a.getId() : "nodeCreate",
                        data: {
                            parent: a.getParent(),
                            name: a.getName(),
                            position: a.getInsertPosition(),
                            related: a.getRelatedNodeId()
                        },
                        dataType: "json",
                        error: function (a) {
                            alert(a.status + ": " + a.responseText)
                        }
                    }
                },
                onDelete: function (a) {
                    return {
                        type: "POST", url: "nodeDelete?id=" + a.getId(), dataType: "json", error: function (a) {
                            alert(a.status +
                            ": " + a.responseText)
                        }
                    }
                },
                language: "zh-CN",
                types: {
                    "default": "glyphicon glyphicon-folder-open",
                    file: "glyphicon glyphicon-file",
                    folder: "glyphicon glyphicon-folder-open"
                }
            })
        }, initTable: function () {
            void 0 != k && k.destroy();
            k = $("#dataTable").dataTable({
                paging: !1,
                searching: !1,
                language: {
                    sProcessing: "\u5904\u7406\u4e2d...",
                    sLengthMenu: "\u663e\u793a _MENU_ \u9879\u7ed3\u679c",
                    sZeroRecords: "\u6ca1\u6709\u5339\u914d\u7ed3\u679c",
                    sInfo: "\u663e\u793a\u7b2c _START_ \u81f3 _END_ \u9879\u7ed3\u679c\uff0c\u5171 _TOTAL_ \u9879",
                    sInfoEmpty: "\u663e\u793a\u7b2c 0 \u81f3 0 \u9879\u7ed3\u679c\uff0c\u5171 0 \u9879",
                    sInfoFiltered: "(\u7531 _MAX_ \u9879\u7ed3\u679c\u8fc7\u6ee4)",
                    sInfoPostFix: "",
                    sSearch: "\u641c\u7d22:",
                    sUrl: "",
                    sEmptyTable: "\u8868\u4e2d\u6570\u636e\u4e3a\u7a7a",
                    sLoadingRecords: "\u8f7d\u5165\u4e2d...",
                    sInfoThousands: ",",
                    oPaginate: {
                        sFirst: "\u9996\u9875",
                        sPrevious: "\u4e0a\u9875",
                        sNext: "\u4e0b\u9875",
                        sLast: "\u672b\u9875"
                    },
                    oAria: {
                        sSortAscending: ": \u4ee5\u5347\u5e8f\u6392\u5217\u6b64\u5217",
                        sSortDescending: ": \u4ee5\u964d\u5e8f\u6392\u5217\u6b64\u5217"
                    }
                },
                bStateSave: !0,
                columns: [{orderable: !1}, {orderable: !0}, {orderable: !0}, {orderable: !0}],
                pagingType: "bootstrap_full_number",
                order: [[2, "asc"]]
            })
        }, showUpload: function () {
            $("#uploadModal").modal()
        }, initDropZone: function () {
            Dropzone.options.uploadzone = {
                init: function () {
                    this.on("addedfile", function (a) {
                        var c = Dropzone.createElement("<button class='btn btn-sm btn-block'>\u79fb\u9664\u4e0a\u4f20\u961f\u5217</button>"), b = this;
                        c.addEventListener("click", function (c) {
                            c.preventDefault();
                            c.stopPropagation();
                            b.removeFile(a)
                        });
                        a.previewElement.appendChild(c)
                    })
                }
            }
        }, showNewFolder: function () {
            $("#newFolderModal").modal();
            $("#folderName").val(" ")
        }, addNewFolder: function () {
            Pace.track(function () {
                var a = {
                    memberId: m.memberId,
                    fileName: $("#folderName").val().trim(),
                    itemId: 1,
                    folder: globalConstant.FOLDER,
                    status: globalConstant.STATUS_NORMAL,
                    parentId: b
                };
                $.ajax({
                    url: basePath + "hander",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(a),
                    success: function (a) {
                        globalFunction.returnResult(a, "\u6210\u529f\u521b\u5efa\u6587\u4ef6\u5939") ?
                            ($("#newFolderModal").modal("hide"), d.getHander()) : toast.error("\u64cd\u4f5c\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5")
                    }
                })
            })
        }
    }, n = function () {
        console.log(e);
        $.ajax({
            url: basePath + "/hander/deleteMulti",
            type: "DELETE",
            dataType: "json",
            contentType: "application/json",
            data: JSON.stringify(e),
            success: function (a) {
                globalFunction.returnResult(a, "\u6210\u529f\u5220\u9664\u6587\u4ef6") && d.getHander()
            }
        })
    }, p = function () {
    }, q = function () {
        var a = $("#dataTable");
        $(document).on("ready", d.initDropZone);
        $(document).on("ready", d.getMember);
        $(document).on("ready", d.getHander);
        $("#toUpload").on("click", d.showUpload);
        $("#testButton").on("click", d.getSelection);
        $("#toNewFolder").on("click", d.showNewFolder);
        $("#toRefresh").on("click", d.getHander);
        $("#buttonAddFolder").on("click", d.addNewFolder);
        $(".back").live("click", function () {
            window.location.href = $(this).find("a").attr("href")
        });
        $(".toSon").live("click", function () {
            d.toSonHander($(this))
        });
        $("#buttonDelete").on("click", n);
        $("#buttonOpen").on("click", p);
        a.find(".group-checkable").on("change",
            function () {
                var a = $(this).attr("data-set");
                $(this).is(":checked");
                var b = $(this).data("isc");
                $(a).each(function () {
                    0 == b ? ($(this).attr("checked", !0), $(this).parents("tr").toggleClass("active"), $(this).parents("tr").children(0).toggleClass("focus"), $(this).parents("tr").find("span").toggleClass("checked")) : ($(this).attr("checked", !1), $(this).parents("tr").removeClass("active"), $(this).parents("tr").children(0).removeClass("focus"), $(this).parents("tr").find("span").removeClass("checked"))
                });
                0 == b ? ($(this).data("isc",
                    1), h = !0) : $(this).data("isc", 0)
            });
        a.on("mousedown", "tbody tr", function (b) {
            h && (h = !1, a.find(".group-checkable").parents().removeClass("checked"));
            $(this).toggleClass("active");
            $(this).children(0).toggleClass("focus");
            $(this).find("span").toggleClass("checked");
            3 == b.which && d.initRightClick()
        })
    };
    return {
        init: function () {
            q()
        }
    }
}();